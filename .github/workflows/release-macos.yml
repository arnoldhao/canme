name: Release macOS App

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true
        default: '0.1.18'

jobs:
  release:
    name: Release macOS App
    runs-on: macos-latest
    permissions:
      contents: write
    strategy:
      matrix:
        platform:
          - darwin/amd64
          - darwin/arm64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Normalise platform tag
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//_/g' -e 's/darwin/mac/g' -e 's/amd64/intel/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          # 提取架构信息用于二进制下载
          arch=$(echo ${{ matrix.platform }} | cut -d'/' -f2)
          echo "arch=$arch" >> "$GITHUB_OUTPUT"

      - name: Normalise version tag
        id: normalise_version
        shell: bash
        run: |
          if [ "${{ github.event.release.tag_name }}" == "" ]; then
            version=$(echo ${{ github.event.inputs.tag }} | sed -e 's/v//g')
            echo "version=$version" >> "$GITHUB_OUTPUT"
          else
            version=$(echo ${{ github.event.release.tag_name }} | sed -e 's/v//g')
            echo "version=$version" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      - name: Install wails
        shell: bash
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 23.1.0

      # 新增：下载二进制依赖文件
      - name: Download embedded binaries
        shell: bash
        run: |
          ./scripts/fetch-embedded-binaries.sh \
            --platform "${{ matrix.platform }}" \
            --ytdlp-version "$YTDLP_VERSION" \
            --ffmpeg-version "$FFMPEG_VERSION"
          echo "Downloaded binaries:"
          ls -la backend/embedded/binaries/

      - name: Build frontend assets
        shell: bash
        run: |
          npm install -g npm@9
          jq '.info.productVersion = "${{ steps.normalise_version.outputs.version }}"' wails.json > tmp.json
          mv tmp.json wails.json
          cd frontend
          jq '.version = "${{ steps.normalise_version.outputs.version }}"' package.json > tmp.json
          mv tmp.json package.json
          npm install

      - name: Build wails app for macOS
        shell: bash
        run: |
          CGO_ENABLED=1 wails build -platform ${{ matrix.platform }} \
          -ldflags "-X CanMe/backend/consts.APP_VERSION=${{ steps.normalise_version.outputs.version }}"

      - name: Checkout create-image
        uses: actions/checkout@v4
        with:
          repository: create-dmg/create-dmg
          path: ./build/create-dmg
          ref: master

      - name: Build macOS DMG
        shell: bash
        working-directory: ./build
        run: |
          mv bin/canme.app "bin/CanMe.app"
          ./create-dmg/create-dmg \
            --skip-jenkins \
            --no-internet-enable \
            --volname "CanMe" \
            --volicon "bin/CanMe.app/Contents/Resources/iconfile.icns" \
            --text-size 12 \
            --window-pos 400 400 \
            --window-size 660 450 \
            --icon-size 80 \
            --icon "CanMe.app" 180 180 \
            --hide-extension "CanMe.app" \
            --app-drop-link 480 180 \
            "bin/CanMe-${{ steps.normalise_platform.outputs.tag }}.dmg" \
            "bin"

      - name: Rename dmg
        working-directory: ./build/bin
        run: mv "CanMe-${{ steps.normalise_platform.outputs.tag }}.dmg" "CanMe_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.dmg"

      - name: Upload release asset (DMG Package)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.normalise_version.outputs.version }}
          files: ./build/bin/CanMe_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.dmg
          token: ${{ secrets.GITHUB_TOKEN }}
